# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hsWUcua8KSX2AWnmQKyWx0Im2TfrTU8j
"""

import numpy as np
import matplotlib.pyplot as plt

# Sinx funksiya uchun x qiymatlari
x = np.linspace(-2 * np.pi, 2 * np.pi, 500)
y = np.sin(x)

# Grafika
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='y = sin(x)', color='blue', linewidth=2)
plt.title("y = sin(x) Grafigi", fontsize=14)
plt.xlabel("x", fontsize=12)
plt.ylabel("y", fontsize=12)
plt.axhline(0, color='black', linewidth=0.5, linestyle='--')
plt.axvline(0, color='black', linewidth=0.5, linestyle='--')
plt.grid(color='gray', linestyle='--', linewidth=0.5)
plt.legend(fontsize=12)
plt.show()

import numpy as np
import matplotlib.pyplot as plt

# Tasodifiy nuqtalar generatsiya qilish
num_points = 100  # nuqtalar soni
x = np.random.rand(num_points) * 10  # X koordinatalari (0 dan 10 gacha)
y = np.random.rand(num_points) * 10  # Y koordinatalari (0 dan 10 gacha)

# Grafika chizish
plt.figure(figsize=(8, 6))
plt.scatter(x, y, color='purple', alpha=0.7, edgecolors='black')
plt.title("Tasodifiy Nuqtalar Grafiki", fontsize=14)
plt.xlabel("X koordinatalari", fontsize=12)
plt.ylabel("Y koordinatalari", fontsize=12)
plt.grid(color='gray', linestyle='--', linewidth=0.5)
plt.show()

from PIL import Image

# Rasmni oq-qora formatga o'tkazish funksiyasi
def convert_to_black_and_white(input_path, output_path):
    # Rasmni ochish
    img = Image.open(input_path)
    # Oq-qora formatga o'tkazish
    bw_img = img.convert("L")
    # Natijani saqlash
    bw_img.save(output_path)
    print(f"Oq-qora rasm saqlandi: {output_path}")

# Dastur ishga tushishi
input_file = "Без названия.jpg"  # O'zgartirish kerak bo'lgan rasm nomi
output_file = "output_bw.jpg"  # Saqlanadigan oq-qora rasm nomi

convert_to_black_and_white(input_file, output_file)

import pandas as pd


data = {
    "Mamlakat": ["AQSh", "Hindiston", "Braziliya", "Rossiya", "Fransiya"],
    "Kasallar soni": [70000000, 62000000, 18000000, 37000000, 24000000],
    "Vafot etganlar": [900000, 100000, 200000, 900000, 500000],
    "Sog'ayganlar": [6500000, 45000000, 80000000, 63000000, 80000000]
}


df = pd.DataFrame(data)


def analyze_covid_data(df):
    print("1. COVID-19 bo'yicha jadval ma'lumotlari:")
    print(df, "\n")

    print("2. Umumiy kasallar soni:")
    print(df["Kasallar soni"].sum(), "\n")

    print("3. Umumiy vafot etganlar soni:")
    print(df["Vafot etganlar"].sum(), "\n")

    print("4. Umumiy sog'ayganlar soni:")
    print(df["Sog'ayganlar"].sum(), "\n")

    print("5. O'lim foizi (%):")
    df["O'lim foizi (%)"] = (df["Vafot etganlar"] / df["Kasallar soni"]) * 100
    print(df[["Mamlakat", "O'lim foizi (%)"]], "\n")

    print("6. Eng ko'p vafot etganlar qaysi mamlakatda:")
    max_deaths = df[df["Vafot etganlar"] == df["Vafot etganlar"].max()]
    print(max_deaths[["Mamlakat", "Vafot etganlar"]], "\n")

    print("7. Eng yuqori o'lim foizi qaysi mamlakatda:")
    max_death_rate = df[df["O'lim foizi (%)"] == df["O'lim foizi (%)"].max()]
    print(max_death_rate[["Mamlakat", "O'lim foizi (%)"]], "\n")


analyze_covid_data(df)